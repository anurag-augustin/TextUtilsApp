{"version":3,"sources":["components/About.jsx","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","className","style","src","alt","Navbar","to","title","type","id","homeText","aboutText","onClick","toggleMode","role","htmlFor","btnText","TextForm","useState","text","setText","headingText","placeholder","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","toLowerCase","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","split","filter","defaultProps","App","setbtnText","setMode","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f5ef06a.chunk.js","sourcesContent":["import React from 'react'\r\n// style={{maxWidth: \"540px\"}}\r\n\r\n\r\n\r\nexport const About = (props) => {\r\n    let myStyle={\r\n        color : props.mode ==='light'?'black':'white',\r\n        backgroundColor: props.mode ==='light'?'white':'#292924',\r\n        border : props.mode ==='dark'?'1px solid white':''\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <div className=\"container card mb-3\" style={myStyle}>\r\n  <div className=\"row g-0\">\r\n    <div className=\"col-md-4\">\r\n      <img src=\"./logo512.png\" className=\"img-fluid rounded-start\" alt=\"...\"/>\r\n    </div>\r\n    <div className=\"col-md-8\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">About Page</h5>\r\n        <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n        \r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\r\n \r\n    return (\r\n        <nav className={`navbar sticky-top navbar-expand-lg navbar-${props.mode} bg-${props.mode}` }>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/TextUtilsApp/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/TextUtilsApp/\">{props.homeText}</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" to=\"/TextUtilsApp/about\">{props.aboutText}</Link>\r\n        </li>\r\n       \r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">{props.btnText}</label>\r\n</div>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title :PropTypes.string.isRequired,\r\n    homeText :PropTypes.string,\r\n    aboutText :PropTypes.string\r\n}\r\nNavbar.defaultProps ={\r\n  \r\n    homeText :\"Home\",\r\n    aboutText :\"About\"\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleLowerClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n  const downloadClick = () => {\r\n      const element = document.createElement(\"a\");\r\n\r\n    const file = new Blob([text,{type : 'text/plain'}]);\r\n    element.href =URL.createObjectURL(file);\r\n    element.download = \"myFile.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  };\r\n  \r\n \r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n      <>\r\n    <div className=\"container\">\r\n      <h1>{props.headingText}</h1>\r\n\r\n      <div className=\"mb-3\">\r\n        {/* <label for=\"myBox\" className=\"form-label\">{props.textArea}</label> */}\r\n        <textarea\r\n        \r\n        placeholder=\"Enter your text here\"\r\n          value={text}\r\n          className=\"form-control\"\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"6\"\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"d-grid gap-2  d-md-block\">\r\n      <button disabled={text.length===0} type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n        Convert to UPERCASE\r\n      </button>\r\n      \r\n      <button disabled={text.length===0}  type=\"button\" className=\"btn btn-primary mx-1\" onClick={handleLowerClick}>\r\n        Convert to lowercase\r\n      </button>\r\n      \r\n      <button disabled={text.length===0}  type=\"button\"  className=\"btn btn-primary mx-1\" onClick={downloadClick}>\r\n        Download Text\r\n      </button>\r\n      \r\n      <button disabled={text.length===0}  type=\"button\" \r\n        className=\"btn btn-danger clearBtn mx-1\"\r\n        onClick={handleClearClick}\r\n      >Clear TextArea\r\n      </button>\r\n      </div>\r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} Words and {text.length} Characters</p>\r\n        <p>{text.length===0?0:0.008* text.split(\" \").length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport React,{useState} from 'react'\nimport {\n  Routes,\n  Route,\n  BrowserRouter\n} from \"react-router-dom\";\nimport { About } from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\nfunction App() {\n  const [btnText, setbtnText] = useState(\"Enable Dark Mode\")\n  const [mode, setMode] = useState(\"light\")\nconst toggleMode =() =>{\n  if(mode === \"light\"){\n    setMode(\"dark\")\n    document.body.style.backgroundColor ='#363630';\n    document.body.style.color ='white';\n    setbtnText(\"Disable Dark Mode\");\n   \n    \n  }\n  else if(mode === \"dark\")\n  {\n    setMode(\"light\")\n    document.body.style.backgroundColor ='white';\n    document.body.style.color ='black';\n    setbtnText(\"Enable Dark Mode\");\n  }\n}\n\n\n  return (\n\n    <>\n    <BrowserRouter>\n\n<Navbar btnText={btnText} mode={mode} toggleMode={toggleMode} title=\"T e x t   U t i l s\" homeText=\"Home\" aboutText=\"About\"/>\n<div className=\"container my-3\">\n<Routes>\n\n          <Route exact path=\"/TextUtilsApp/about\"\n           element = { <About mode={mode}/> }/>\n           <Route exact path=\"/TextUtilsApp/\"\n           element = { <TextForm mode={mode} headingText=\"Text Analizer\" /> }/>\n         \n          </Routes>\n\n</div>\n\n</BrowserRouter>\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}